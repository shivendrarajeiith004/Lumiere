if ((3 + 5) > 5 && (2 * 3) == 6) {}

if ((3 + 5) > 5 && (2 * 3) == 6) { 10 + 20 * 2; } else { 5 * 3 - 2; }
if ((3 + 5) > 5 && (2 * 3) == 6) {10 + 20 * 2;} else {5 * 3 - 2;}
if ((int)(3.5 + 5) > (int)(5.0) && (2 * (int)3) == 6) { (int)((3 + 5) * 2); (float)(4 - 2) / 3; } else if ((float)(4 * 2) <= 10.0 || (int)(8 / 2) != 3) { -(7 + 3) + 2; (6 / (float)2) + 4; } else { (double)(10 * 3) / (float)5; (15 - 5) * -2; }
check_until ( a + 10; a < b; a -1) {a+b;}
check_until () {a+b;}
check_until (;;) {a+b;}

check_until((3 + 5) > 5 && (2 * 3) == 6) { if ((3 + 5) > 5 && (2 * 3) == 6) { check_until(a + 10; a < b; a - 1) { a + b; }; } else if ((int)(3.5 + 5) > (int)(5.0) && (2 * (int)3) == 6) { (int)((3 + 5) * 2); } else { (5 * 3 - 2); } }
string a,b,c,d;
char a,b,c,d;
vec a= <10,10> ,b ,c ,d ,e;
float a=10.1, b,c;
int a=10, b,c;

void sum(char a , char b ) { check_until(true) { if (true) { a + b ;}} }
