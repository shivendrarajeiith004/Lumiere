%{
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
void yyerror(char *);
int yylex();
int addtoken(char *s,char*token_value);

%}


%union {
    int intval;
    float floatval;
    char * stringval;
}

%token INTEGER
%token DOUBLE 
%token STRING_VALUE BOOL_VALUE
%token INT FLOAT CHAR BOOLEAN STRING VECTOR CLUSTER VOID
%token BODY BASIC FORCE IF ELSE CHECK_UNTIL BREAK CONTINUE FIX USE HARDWARE
%token GPU CPU OS RETURN TRY CATCH TYPEOF CLASS EXTENDS INHERITS HIDDEN DEG
%token ADD_OP SUB_OP DIV_OP MULT_OP POW_OP MOD_OP ABS_OP COMP_ASSIGN_DIV
%token COMP_ASSIGN_SUBTRACT COMP_ASSIGN_MUL LESS_THAN LESS_THAN_EQ
%token GREAT_THAN GREAT_THAN_EQ VAR ASSIGN COMP_ASSIGN_ADD EOL LEFT_PAREN  
%token RIGHT_PAREN  LEFT_CURLY_BRACE RIGHT_CURLY_BRACE LEFT_BRACE RIGHT_BRACE
%token MAIN SINGLE_LINE_COMMENT MULTI_LINE_COMMENT CONST MASS SEMICOLON
%%

program : program  STATEMENT | 



STATEMENT : LOOP_STATEMENT  | ASSIGNMENT_STATEMENT | DECLARATION_STATEMENT

STATEMENT_LIST : STATEMENT | STATEMENT_LIST ',' STATEMENT  

DECLARATION_STATEMENT : INT VAR  

// DECLARATION_LIST : DECLARATION_STATEMENT | DECLARATION_LIST ',' DECLARATION_STATEMENT 

LOOP_STATEMENT  : CHECK_UNTIL LEFT_PAREN  INITIAL_CONDITION RIGHT_PAREN LEFT_CURLY_BRACE STATEMENT_LIST RIGHT_CURLY_BRACE

INITIAL_CONDITION :  ASSIGNMENT_STATEMENT SEMICOLON ASSIGNMENT_STATEMENT SEMICOLON ASSIGNMENT_STATEMENT | SEMICOLON SEMICOLON SEMICOLON | INTEGER | VAR

ASSIGNMENT_STATEMENT : VAR ASSIGN INTEGER ;
                        


    


%%


void yyerror(char *s) {
  printf("%s\n", s);
}
int main() {
yyparse();
}
